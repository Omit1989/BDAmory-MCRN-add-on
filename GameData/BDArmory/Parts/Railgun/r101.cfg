PART
{
// Kerbal Space Program - Part Config
// 
// 

// --- general parameters ---
name = bahaR101Railgun
module = Part
author = BahamutoD

// --- asset parameters ---
mesh = model.mu
rescaleFactor = 1


// --- node definitions ---
node_attach = 0, 0, 0.7742968, 0, 0, -1, 1


// --- editor parameters ---
TechRequired = precisionEngineering
entryCost = 2100
cost = 3500
category = none
subcategory = 0
title = R101 Railgun
manufacturer = Bahamuto Dynamics
description = A radially mounted Railgun
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1

// --- standard part parameters ---
mass = 1
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 60
maxTemp = 3600

stagingIcon = SOLID_BOOSTER

MODULE
{
	name = ModuleTargetingCamera
	cameraTransformName = camTransform
	eyeHolderTransformName = eyeHolderTransform
	zoomFOVs = 40,15,3,1
	gimbalLimit = 10
}

MODULE
{
	name = ModuleTurret
	
	yawTransformName = aimRotate
	pitchTransformName = aimPitch
	
	pitchSpeedDPS = 80
	yawSpeedDPS = 80
	
	minPitch = -15
	maxPitch = 15
	yawRange = 30
	
	smoothRotation = true
	smoothMultiplier = 10
}

MODULE
{
	name = ModuleWeapon
	shortName = R101 Railgun
	
	fireTransformName = fireTransform
	
	hasDeployAnim = false
	
	hasFireAnimation = true
	fireAnimName = fireAnim
	spinDownAnimation = false
	
	roundsPerMinute = 12
	maxDeviation = 0.005
	maxTargetingRange = 10000
	maxEffectiveDistance = 10000
	
	ammoName = CannonShells
	bulletType = 105mmBullet
	requestResourceAmount = 1
	
	hasRecoil = true
	onlyFireInRange = true
	bulletDrop = false
	
	weaponType = cannon	
	
	projectileColor = 0, 165, 255, 128
	
	tracerStartWidth = 0.29
	tracerEndWidth = 0.2
	tracerLength = 0
	tracerDeltaFactor = 14.75
	
	maxHeat = 5000
	heatPerShot = 99
	heatLoss = 500	
	
	fireSoundPath = BDArmory/Parts/m1Abrams/sounds/shot
	overheatSoundPath = BDArmory/Parts/50CalTurret/sounds/turretOverheat
	oneShotSound = true
	showReloadMeter = true
	reloadAudioPath = BDArmory/Parts/m1Abrams/sounds/reload
	
}


	MODULE
	{
        name = ModuleRadar

        // -- Section: General Configuration --
        radarName = Goalkeeper CIWS Radar		// if left empty part.title is used, but advised to set this to a nice printable text
        rwrThreatType = 0				// IMPORTANT, please set correctly:
                                // 0 = SAM site radar
                                // 1 = Fighter radar (airborne)
                                // 2 = AWACS radar (airborne)
                                // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
                                // 5 = Detection radar (ground/ship based)
                                // 6 = SONAR (ship/submarine based)
        rotationTransformName = scanRotation
	    turretID = 1					// if needed
        resourceDrain = 0.45				// change to higher values for more capable radars, e.g AESA

        // -- Section: Capabilities --
        omnidirectional = true				// false: boresight scan radar
        directionalFieldOfView = 90			// for omni and boresight
        //boresightFOV = 10				// for boresight only
        scanRotationSpeed = 240				// degress per second
        //lockRotationSpeed = 120				// only relevant if canLock
        //lockRotationAngle = 4
        showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
        //multiLockFOV = 30				// only relevant if canLock
        //lockAttemptFOV = 2				// only relevant if canLock
        maxLocks = 1					//how many targets can be locked/tracked simultaneously. only relevant if canLock

        canScan = true					// scanning/detecting targets (volume search)
        canLock = true					// locking/tracking targets (fire control)
        canTrackWhileScan = true			// continue scanning while tracking a locked target
        canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])

        minSignalThreshold = 350				// DEPRECATED, NO LONGER USED! use detection float curve!
        minLockedSignalThreshold = 120			// DEPRECATED, NO LONGER USED! use locktrack float curve!

        radarGroundClutterFactor = 0.1			// how much is the radar efficiency reduced to by ground clutter/look-down?
                                // 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
                                // 1.0 = fully efficient (no difference between air & ground targets)
                                // default if unset: 0.25
                                // Ground targets, especially ships, already have a massively larger RCS than fighters, hence
                                // any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
                                // values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.

        radarDetectionCurve
        {
          // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
          // this defines both min/max range of the radar, and sensitivity/efficiency
          // it is recommended to define an "assured detection range", at which all craft are detected regardless
          //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
          //        key = distance	rcs
                    key = 0.0	0
                    key = 2	0	//between 0 and 2 km the min cross section is 0, thus assured detection of everything
                    key = 5	5   //max targeting range of the weapon is 5km, detectable rcs is quite small
                    key = 10 20	//at twice the maxTargeting range a rcs of min 20 m^2 can be detected
        }

        radarLockTrackCurve
        {
            // same as detectionCurve, just for locking/tracking purpose
	    // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
	    //   ECM-jammers & chaff completely ineffective!!
            //      key = distance	rcs
                    key = 0.0	0
                    key = 5	5    //for tracking locks the radar is highly sensitive
                    key = 10 40	//at twice the maxTargeting range the lockable rcs is quite large
        }

	}

RESOURCE
{
	name = CannonShells
	amount = 20
	maxAmount = 20
}

}
